server:
  port: 8089

spring:

  # mysql-druid
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:postgresql://120.55.243.225:5432/postgres
    username: postgres
    password: gis
    validation-query: "SELECT 'X' FROM DUAL"
    # 初始化大小，最小，最大
    druid:
      initialSize: 5
      minIdle: 5
      maxIdle: 100
      maxActive: 200
      # 配置获取连接等待超时的时间
      maxWait: 5000
      # 每次使用连接时进行校验，会影响系统性能。默认为false
      testOnBorrow: false
      # 验证使用的SQL语句
      validationQuery: SELECT 1
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
      testWhileIdle: true
      # 每30秒运行一次空闲连接回收器（默认-1）
      timeBetweenEvictionRunsMillis: 30000
      # 池中的连接空闲30分钟后被回收（默认30分钟）
      minEvictableIdleTimeMillis: 1800000
      # 在每次空闲连接回收器线程(如果有)运行时检查的连接数量（设置为和maxIdle一样）
      numTestsPerEvictionRun: 100
      ######Druid监控配置######
      #下面配置说明请参考Druid Github Wiki，配置_StatViewServlet配置
      StatViewServlet:
        loginUsername: druid
        loginPassword: druid

  # redis
#  redis:
#    database: 0       # Redis数据库索引（默认为0）
#    host:
#    port:
#    password: :
#    timeout:    # ms
#    pool:
#      max-active: 12   # 连接池最大连接数（使用负值表示没有限制）
#      max-wait: -1     # 连接池最大阻塞等待时间（使用负值表示没有限制）
#      max-idle: 4      # 连接池中的最大空闲连接
#      min-idle: 1      # 连接池中的最小空闲连接

  # mongo
#  data:
#    mongodb:
#      database:
#      host:
#      port:
#      username:
#      password:


# 打印sql执行信息
logging:
  level:
    com:
      xu:
        demo:
          mapper: debug



